#!/usr/bin/env python3

import sys
from argparse import ArgumentParser

import pyodata
import requests

from getpass import getpass


def _parse_args(argv):
    parser = ArgumentParser()
    parser.add_argument('SERVICE_ROOR_URL', type=str)
    parser.add_argument('--user', default=None, type=str)
    parser.add_argument('--password', default=None, type=str)
    args = parser.parse_args(argv[1:])

    return args


def _main(argv):
    args = _parse_args(argv)

    session = requests.Session()

    if args.user is not None:

        if args.password is None:
            args.password = getpass(f'Enter password for {args.user}: ')

        session.auth = (args.user, args.password)

    try:
        session.head(args.SERVICE_ROOR_URL)
        args.password = 'xxxxx'
    except pyodata.exceptions.HttpError as err:
        sys.stderr.write(str(err))
        sys.stderr.write('\n')
        sys.exit(1)

    print('[Fetching $metadata ...]')
    client = pyodata.Client(args.SERVICE_ROOR_URL, session)

    print('[Printing out all Entity Sets ...]')
    for es in client.schema.entity_sets:
        print(es.name)

        for prop in es.entity_type.proprties():
            print(f'  {prop.name}({prop.typ.name})')

        for prop in es.entity_type.nav_proprties:
            print(f'  {prop.name}({prop.to_role.entity_type_name})')

    print('[Done!]')
    return 0


if __name__ == '__main__':
    sys.exit(_main(sys.argv))
